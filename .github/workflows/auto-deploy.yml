name: Deploy to EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 수동 실행 가능

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production  # 환경 설정 (수동 승인 가능)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Manual Approval Required
      if: github.event_name == 'push'
      run: |
        echo "🚀 자동 배포가 요청되었습니다."
        echo "📋 변경사항:"
        echo "  - 커밋: ${{ github.sha }}"
        echo "  - 브랜치: ${{ github.ref_name }}"
        echo "  - 작성자: ${{ github.actor }}"
        echo "  - 메시지: ${{ github.event.head_commit.message }}"
        echo ""
        echo "✅ 배포를 계속 진행합니다..."
    
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # 프로젝트 디렉토리로 이동
          cd /var/www/smartcompressor
          
          echo "🔧 502 오류 해결 시작..."
          
          # Git pull로 최신 코드 가져오기
          git pull https://${{ secrets.DEPLOY_TOKEN }}@github.com/SEONBEOM-Kim/smartcompressor-ai-system.git main
          
          # Node.js 의존성 업데이트
          npm install
          
          # PM2 설치 확인
          if ! command -v pm2 &> /dev/null; then
            echo "📦 PM2 설치 중..."
            npm install -g pm2
          fi
          
          echo "📊 현재 PM2 상태 확인..."
          pm2 status
          
          # 기존 서비스 완전 종료
          echo "🛑 모든 PM2 프로세스 중지..."
          pm2 delete all || true
          pkill -f "node server.js" || true
          pkill -f "python.*app.py" || true
          
          # 로그 디렉토리 생성
          mkdir -p logs
          
          # PM2로 서버 시작
          echo "🚀 PM2 프로세스 재시작..."
          pm2 start ecosystem.config.js --env production
          
          # PM2 자동 시작 설정
          pm2 startup
          pm2 save
          
          # 서버 시작 대기
          echo "⏳ 서버 시작 대기 (10초)..."
          sleep 10
          
          # 서버 상태 확인
          echo "📊 PM2 상태 확인..."
          pm2 status
          
          # 서버 응답 테스트
          echo "🌐 서버 응답 테스트..."
          curl -s http://localhost:3000 || echo "❌ 로컬 서버 응답 없음"
          curl -s http://localhost:3000/api/auth/verify || echo "❌ API 응답 없음"
          
          echo "✅ 502 오류 해결 완료: $(date)"
          echo "🌐 이제 https://signalcraft.kr로 접속해보세요!"
