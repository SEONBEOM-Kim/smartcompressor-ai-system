name: Auto Deploy to Signalcraft EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # 수동 실행 가능

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        timeout: 60s
        command_timeout: 300s
        script: |
          echo "🚀 Signalcraft 자동 배포 시작..."
          echo "📋 배포 정보:"
          echo "  - 커밋: ${{ github.sha }}"
          echo "  - 브랜치: ${{ github.ref_name }}"
          echo "  - 작성자: ${{ github.actor }}"
          echo "  - 시간: $(date)"
          
          # 서버 상태 확인
          echo "🔍 서버 상태 확인..."
          whoami
          pwd
          ls -la
          
          # 프로젝트 디렉토리 확인
          if [ ! -d "/var/www/smartcompressor" ]; then
            echo "❌ 프로젝트 디렉토리가 없습니다. 생성 중..."
            sudo mkdir -p /var/www/smartcompressor
            sudo chown ubuntu:ubuntu /var/www/smartcompressor
          fi
          
          # 프로젝트 디렉토리로 이동
          cd /var/www/smartcompressor
          
          echo "🔧 502 오류 해결 및 배포 시작..."
          
          # Git pull로 최신 코드 가져오기
          echo "📥 최신 코드 가져오는 중..."
          git pull origin main
          
          # Node.js 의존성 업데이트
          echo "📦 Node.js 의존성 설치 중..."
          npm install
          
          # 기존 서비스 완전 종료
          echo "🛑 기존 서비스 중지..."
          pm2 delete all 2>/dev/null || echo "PM2 프로세스 없음"
          pkill -f "node server.js" || true
          pkill -f "python.*app.py" || true
          
          # 로그 디렉토리 생성
          mkdir -p logs

          # PM2 설치 (전역 설치)
          echo "📦 PM2 전역 설치 중..."
          npm install -g pm2
          
          # PM2 버전 확인
          echo "📊 PM2 버전 확인..."
          pm2 --version
          
          # PM2로 서버 시작
          echo "🚀 PM2로 서버 시작..."
          pm2 start ecosystem.config.js --env production
          
          # PM2 상태 확인
          echo "📊 PM2 상태 확인..."
          pm2 status
          
          # PM2 자동 시작 설정
          echo "🔄 PM2 자동 시작 설정..."
          pm2 startup
          pm2 save
          
          # 서버 시작 대기
          echo "⏳ 서버 시작 대기 (15초)..."
          sleep 15
          
          # 포트 확인
          echo "🌐 포트 사용 상태:"
          sudo netstat -tlnp | grep -E ":(3000|80|443)" || echo "포트 확인 권한 없음"

          # 서버 응답 테스트
          echo "🌐 서버 응답 테스트..."
          curl -s http://localhost:3000 || echo "❌ 로컬 서버 응답 없음"
          curl -s http://localhost:3000/api/auth/verify || echo "❌ API 응답 없음"
          
          # Nginx 상태 확인
          echo "🔧 Nginx 상태 확인..."
          sudo systemctl status nginx || echo "Nginx 상태 확인 실패"
          
          # Nginx 설정 테스트
          echo "🔧 Nginx 설정 테스트..."
          sudo nginx -t || echo "Nginx 설정 오류"
          
          # Nginx 재시작
          echo "🔄 Nginx 재시작..."
          sudo systemctl restart nginx
          
          # 간단한 배포 실행
          echo "🚀 간단한 배포 실행..."
          chmod +x scripts/simple-deploy.sh
          ./scripts/simple-deploy.sh
          
          echo "✅ 502 오류 해결 및 배포 완료: $(date)"
          echo "🌐 이제 https://signalcraft.kr로 접속해보세요!"
